{"ast":null,"code":"var _jsxFileName = \"C:\\\\front-end-blog-pessoal\\\\src\\\\componentes\\\\postagens\\\\cadastroPost\\\\CadastroPost.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\";\nimport './CadastroPost.css';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useLocalStorage from 'react-use-localstorage';\nimport { busca, buscaId, post, put } from '../../../services/Service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CadastroPost() {\n  _s();\n\n  let navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [temas, setTemas] = useState([]);\n  const [token, setToken] = useLocalStorage('token'); //Verificando se o usuário está logado\n\n  useEffect(() => {\n    if (token == \"\") {\n      alert(\"Você precisa estar logado\");\n      navigate(\"/login\");\n    }\n  }, [token]);\n  const [tema, setTema] = useState({\n    id: 0,\n    descricao: ''\n  });\n  const [postagem, setPostagem] = useState({\n    id: 0,\n    titulo: '',\n    texto: '',\n    tema: null\n  });\n  useEffect(() => {\n    setPostagem({ ...postagem,\n      tema: tema\n    });\n  }, [tema]);\n  useEffect(() => {\n    getTemas();\n\n    if (id !== undefined) {\n      findByIdPostagem(id);\n    }\n  }, [id]);\n\n  async function getTemas() {\n    await busca(\"/temas\", setTemas, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n\n  async function findByIdPostagem(id) {\n    await buscaId(`postagens/${id}`, setPostagem, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n\n  function updatedPostagem(e) {\n    setPostagem({ ...postagem,\n      [e.target.name]: e.target.value,\n      tema: tema\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n\n    if (id !== undefined) {\n      put(`/postagens`, postagem, setPostagem, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert('Postagem atualizada com sucesso');\n    } else {\n      post(`/postagens`, postagem, setPostagem, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert('Postagem cadastrada com sucesso');\n    }\n\n    back();\n  }\n\n  function back() {\n    navigate('/posts');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"topo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"textSecondary\",\n        component: \"h1\",\n        align: \"center\",\n        children: \"Formul\\xE1rio de cadastro postagem\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: postagem.titulo,\n        onChange: e => updatedPostagem(e),\n        id: \"titulo\",\n        label: \"titulo\",\n        variant: \"outlined\",\n        name: \"titulo\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: postagem.texto,\n        onChange: e => updatedPostagem(e),\n        id: \"texto\",\n        label: \"texto\",\n        name: \"texto\",\n        variant: \"outlined\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-simple-select-helper-label\",\n          children: \"Tema\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-simple-select-helper-label\",\n          id: \"demo-simple-select-helper\",\n          onChange: e => buscaId(`/temas/${e.target.value}`, setTema, {\n            headers: {\n              'Authorization': token\n            }\n          }),\n          children: temas.map(tema => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: tema.id,\n            children: tema.descricao\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n          children: \"Escolha um tema para a postagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Finalizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CadastroPost, \"bFSVPdL7RZP+BTb+8IqxAG5OPOI=\", false, function () {\n  return [useNavigate, useParams, useLocalStorage];\n});\n\n_c = CadastroPost;\nexport default CadastroPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroPost\");","map":{"version":3,"names":["React","useEffect","useState","Container","Typography","TextField","Button","Select","InputLabel","MenuItem","FormControl","FormHelperText","useNavigate","useParams","useLocalStorage","busca","buscaId","post","put","CadastroPost","navigate","id","temas","setTemas","token","setToken","alert","tema","setTema","descricao","postagem","setPostagem","titulo","texto","getTemas","undefined","findByIdPostagem","headers","updatedPostagem","e","target","name","value","onSubmit","preventDefault","back","map"],"sources":["C:/front-end-blog-pessoal/src/componentes/postagens/cadastroPost/CadastroPost.tsx"],"sourcesContent":["import React, { ChangeEvent, useEffect, useState } from 'react'\r\nimport { Container, Typography, TextField, Button, Select, InputLabel, MenuItem, FormControl, FormHelperText } from \"@material-ui/core\"\r\nimport './CadastroPost.css';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport Tema from '../../../models/Tema';\r\nimport useLocalStorage from 'react-use-localstorage';\r\nimport Postagem from '../../../models/Postagem';\r\nimport { busca, buscaId, post, put } from '../../../services/Service';\r\n\r\nfunction CadastroPost() {\r\n    let navigate = useNavigate();\r\n    const { id } = useParams<{ id: string }>();\r\n    const [temas, setTemas] = useState<Tema[]>([])\r\n    const [token, setToken] = useLocalStorage('token');\r\n\r\n    //Verificando se o usuário está logado\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            alert(\"Você precisa estar logado\")\r\n            navigate(\"/login\")\r\n\r\n        }\r\n    }, [token])\r\n\r\n    const [tema, setTema] = useState<Tema>(\r\n        {\r\n            id: 0,\r\n            descricao: ''\r\n        })\r\n    const [postagem, setPostagem] = useState<Postagem>({\r\n        id: 0,\r\n        titulo: '',\r\n        texto: '',\r\n        tema: null\r\n    })\r\n\r\n    useEffect(() => {\r\n        setPostagem({\r\n            ...postagem,\r\n            tema: tema\r\n        })\r\n    }, [tema])\r\n\r\n    useEffect(() => {\r\n        getTemas()\r\n        if (id !== undefined) {\r\n            findByIdPostagem(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function getTemas() {\r\n        await busca(\"/temas\", setTemas, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    async function findByIdPostagem(id: string) {\r\n        await buscaId(`postagens/${id}`, setPostagem, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    function updatedPostagem(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n        setPostagem({\r\n            ...postagem,\r\n            [e.target.name]: e.target.value,\r\n            tema: tema\r\n        })\r\n\r\n    }\r\n\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n\r\n        if (id !== undefined) {\r\n            put(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            alert('Postagem atualizada com sucesso');\r\n        } else {\r\n            post(`/postagens`, postagem, setPostagem, {\r\n                headers: {\r\n                    'Authorization': token\r\n                }\r\n            })\r\n            alert('Postagem cadastrada com sucesso');\r\n        }\r\n        back()\r\n\r\n    }\r\n\r\n    function back() {\r\n        navigate('/posts')\r\n    }\r\n\r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography\r\n                    variant=\"h3\"\r\n                    color=\"textSecondary\"\r\n                    component=\"h1\"\r\n                    align=\"center\" >\r\n                    Formulário de cadastro postagem\r\n                </Typography>\r\n                <TextField\r\n                    value={postagem.titulo}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)}\r\n                    id=\"titulo\"\r\n                    label=\"titulo\"\r\n                    variant=\"outlined\"\r\n                    name=\"titulo\"\r\n                    margin=\"normal\"\r\n                    fullWidth />\r\n                <TextField value={postagem.texto}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => updatedPostagem(e)}\r\n                    id=\"texto\"\r\n                    label=\"texto\"\r\n                    name=\"texto\"\r\n                    variant=\"outlined\"\r\n                    margin=\"normal\"\r\n                    fullWidth />\r\n                <FormControl >\r\n                    <InputLabel\r\n                        id=\"demo-simple-select-helper-label\">\r\n                        Tema\r\n                    </InputLabel>\r\n                    <Select\r\n                        labelId=\"demo-simple-select-helper-label\"\r\n                        id=\"demo-simple-select-helper\"\r\n                        onChange={(e) => buscaId(`/temas/${e.target.value}`, setTema, {\r\n                            headers: {\r\n                                'Authorization': token\r\n                            }\r\n                        })}>\r\n                        {\r\n                            temas.map(tema => (\r\n                                <MenuItem value={tema.id}>{tema.descricao}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                    <FormHelperText>\r\n                        Escolha um tema para a postagem\r\n                    </FormHelperText>\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\">\r\n                        Finalizar\r\n                    </Button>\r\n                </FormControl>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\nexport default CadastroPost;"],"mappings":"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"},"metadata":{},"sourceType":"module"}