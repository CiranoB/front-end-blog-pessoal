{"ast":null,"code":"var _jsxFileName = \"C:\\\\front-end-blog-pessoal\\\\src\\\\componentes\\\\temas\\\\cadastroTema\\\\CadastroTema.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\nimport { buscaId, post, put } from '../../../services/Service';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useLocalStorage from 'react-use-localstorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CadastroTema() {\n  _s();\n\n  let history = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [token, setToken] = useLocalStorage('token');\n  const [tema, setTema] = useState({\n    id: 0,\n    descricao: ''\n  });\n  useEffect(() => {\n    if (token == \"\") {\n      alert(\"Você precisa estar logado\");\n      history(\"/login\");\n    }\n  }, [token]);\n  useEffect(() => {\n    if (id !== undefined) {\n      findById(id);\n    }\n  }, [id]);\n\n  async function findById(id) {\n    buscaId(`/tema/${id}`, setTema, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  }\n\n  function updatedTema(e) {\n    setTema({ ...tema,\n      [e.target.name]: e.target.value\n    });\n  }\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    console.log(\"tema \" + JSON.stringify(tema));\n\n    if (id !== undefined) {\n      console.log(tema);\n      put(`/tema`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert('Tema atualizado com sucesso');\n    } else {\n      post(`/tema`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert('Tema cadastrado com sucesso');\n    }\n\n    back();\n  }\n\n  function back() {\n    history('/temas');\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"topo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"textSecondary\",\n        component: \"h1\",\n        align: \"center\",\n        children: \"Formul\\xE1rio de cadastro tema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: tema.descricao,\n        onChange: e => updatedTema(e),\n        id: \"descricao\",\n        label: \"descricao\",\n        variant: \"outlined\",\n        name: \"descricao\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Finalizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CadastroTema, \"Z+AuXZ6eUeryyi6bSwdAWwMVttE=\", false, function () {\n  return [useNavigate, useParams, useLocalStorage];\n});\n\n_c = CadastroTema;\nexport default CadastroTema;\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroTema\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","TextField","Button","buscaId","post","put","useNavigate","useParams","useLocalStorage","CadastroTema","history","id","token","setToken","tema","setTema","descricao","alert","undefined","findById","headers","updatedTema","e","target","name","value","onSubmit","preventDefault","console","log","JSON","stringify","back"],"sources":["C:/front-end-blog-pessoal/src/componentes/temas/cadastroTema/CadastroTema.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react'\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport Tema from '../../../models/Tema';\r\nimport { buscaId, post, put } from '../../../services/Service';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport useLocalStorage from 'react-use-localstorage';\r\n\r\n\r\n\r\nfunction CadastroTema() {\r\n    let history = useNavigate();\r\n    const { id } = useParams<{id: string}>();\r\n    const [token, setToken] = useLocalStorage('token');\r\n    const [tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao: ''\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (token == \"\") {\r\n            alert(\"Você precisa estar logado\")\r\n            history(\"/login\")\r\n    \r\n        }\r\n    }, [token])\r\n\r\n    useEffect(() =>{\r\n        if(id !== undefined){\r\n            findById(id)\r\n        }\r\n    }, [id])\r\n\r\n    async function findById(id: string) {\r\n        buscaId(`/tema/${id}`, setTema, {\r\n            headers: {\r\n              'Authorization': token\r\n            }\r\n          })\r\n        }\r\n\r\n        function updatedTema(e: ChangeEvent<HTMLInputElement>) {\r\n\r\n            setTema({\r\n                ...tema,\r\n                [e.target.name]: e.target.value,\r\n            })\r\n    \r\n        }\r\n        \r\n        async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n            e.preventDefault()\r\n            console.log(\"tema \" + JSON.stringify(tema))\r\n    \r\n            if (id !== undefined) {\r\n                console.log(tema)\r\n                put(`/tema`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                alert('Tema atualizado com sucesso');\r\n            } else {\r\n                post(`/tema`, tema, setTema, {\r\n                    headers: {\r\n                        'Authorization': token\r\n                    }\r\n                })\r\n                alert('Tema cadastrado com sucesso');\r\n            }\r\n            back()\r\n    \r\n        }\r\n    \r\n        function back() {\r\n            history('/temas')\r\n        }\r\n  \r\n    return (\r\n        <Container maxWidth=\"sm\" className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography variant=\"h3\" color=\"textSecondary\" component=\"h1\" align=\"center\" >Formulário de cadastro tema</Typography>\r\n                <TextField value={tema.descricao} onChange={(e: ChangeEvent<HTMLInputElement>) => updatedTema(e)} id=\"descricao\" label=\"descricao\" variant=\"outlined\" name=\"descricao\" margin=\"normal\" fullWidth />\r\n                <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;"],"mappings":"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"},"metadata":{},"sourceType":"module"}