{"ast":null,"code":"var _jsxFileName = \"C:\\\\front-end-blog-pessoal\\\\src\\\\componentes\\\\temas\\\\cadastroTema\\\\CadastroTema.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\";\nimport { buscaId, post, put } from '../../../services/Service';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport useLocalStorage from 'react-use-localstorage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CadastroTema() {\n  _s();\n\n  let navigate = useNavigate(); // Use param é resposável por capturar o id da url\n\n  const {\n    id\n  } = useParams(); //Pegando token do armazenamento local\n\n  const [token, setToken] = useLocalStorage('token'); //Inicializando state vazio\n\n  const [tema, setTema] = useState({\n    id: 0,\n    descricao: ''\n  }); //Verificando se o usuário está autenticado ao carregar a tela\n\n  useEffect(() => {\n    if (token === \"\") {\n      alert('Você não realizou o login');\n      navigate('/login');\n    }\n  }, [token]); //Função que vai ser disparado no useEffect caso haja um id definido\n\n  async function findByID(id) {\n    //Função criada na service que realiza a busca no banco de dados pelo id\n    buscaId(`/temas/${id}`, setTema, {\n      headers: {\n        'Authorization': token\n      }\n    });\n  } //Verificando se o id está definido e realizando a busca\n\n\n  useEffect(() => {\n    if (id !== undefined) {\n      findByID(id);\n    }\n  }, [id]); //Captura os valores a partir do formulário\n\n  function updatedTema(e) {\n    setTema({ ...tema,\n      [e.target.name]: e.target.value\n    });\n  } //Função responsável por enviar os dados do tema cadastrado\n\n\n  async function onSubmit(e) {\n    e.preventDefault();\n    console.log(\"tema \" + JSON.stringify(tema)); //Verificando se o id está definido \n    // Atualizando caso esteja\n\n    if (id !== undefined) {\n      console.log(tema);\n      put(`/temas`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert(\"Você atualizou com 100% de sucesso sem erros parabéns !\");\n      navigate('/temas');\n    } // Cadastrando caso não esteaja\n    else {\n      post(`temas`, tema, setTema, {\n        headers: {\n          'Authorization': token\n        }\n      });\n      alert(\"Você conseguiu cadastrar um tema! Que tal adicionar uma postagem agora?\");\n      navigate('/temas');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    className: \"topo\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h3\",\n        color: \"textSecondary\",\n        component: \"h1\",\n        align: \"center\",\n        children: \"Formul\\xE1rio de cadastro tema\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        value: tema.descricao,\n        onChange: e => updatedTema(e),\n        id: \"descricao\",\n        label: \"descri\\xE7\\xE3o\",\n        variant: \"outlined\",\n        name: \"descricao\",\n        margin: \"normal\",\n        fullWidth: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        children: \"Finalizar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CadastroTema, \"QDcylkyHWbVugAZ1KFqImyguSFc=\", false, function () {\n  return [useNavigate, useParams, useLocalStorage];\n});\n\n_c = CadastroTema;\nexport default CadastroTema;\n\nfunction back() {\n  throw new Error('Function not implemented.');\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CadastroTema\");","map":{"version":3,"names":["React","useState","useEffect","Container","Typography","TextField","Button","buscaId","post","put","useNavigate","useParams","useLocalStorage","CadastroTema","navigate","id","token","setToken","tema","setTema","descricao","alert","findByID","headers","undefined","updatedTema","e","target","name","value","onSubmit","preventDefault","console","log","JSON","stringify","back","Error"],"sources":["C:/front-end-blog-pessoal/src/componentes/temas/cadastroTema/CadastroTema.tsx"],"sourcesContent":["import React, { useState, useEffect, ChangeEvent } from 'react'\r\nimport { Container, Typography, TextField, Button } from \"@material-ui/core\"\r\nimport Tema from '../../../models/Tema';\r\nimport { buscaId, post, put } from '../../../services/Service';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport useLocalStorage from 'react-use-localstorage';\r\n\r\n\r\nfunction CadastroTema() {\r\n    let navigate = useNavigate()\r\n\r\n    // Use param é resposável por capturar o id da url\r\n    const { id } = useParams<{ id: string }>()\r\n\r\n    //Pegando token do armazenamento local\r\n    const [token, setToken] = useLocalStorage('token')\r\n\r\n    //Inicializando state vazio\r\n    const [tema, setTema] = useState<Tema>({\r\n        id: 0,\r\n        descricao: ''\r\n    })\r\n\r\n    //Verificando se o usuário está autenticado ao carregar a tela\r\n    useEffect(() => {\r\n        if (token === \"\") {\r\n            alert('Você não realizou o login')\r\n            navigate('/login')\r\n        }\r\n    }, [token])\r\n\r\n    //Função que vai ser disparado no useEffect caso haja um id definido\r\n    async function findByID(id: string) {\r\n        //Função criada na service que realiza a busca no banco de dados pelo id\r\n        buscaId(`/temas/${id}`, setTema, {\r\n            headers: {\r\n                'Authorization': token\r\n            }\r\n        })\r\n    }\r\n\r\n    //Verificando se o id está definido e realizando a busca\r\n    useEffect(() => {\r\n        if (id !== undefined) {\r\n            findByID(id)\r\n        }\r\n    }, [id])\r\n\r\n    //Captura os valores a partir do formulário\r\n    function updatedTema(e: ChangeEvent<HTMLInputElement>){\r\n        setTema ({\r\n            ...tema,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //Função responsável por enviar os dados do tema cadastrado\r\n    async function onSubmit(e: ChangeEvent<HTMLFormElement>) {\r\n        e.preventDefault()\r\n        console.log(\"tema \" + JSON.stringify(tema))\r\n\r\n        //Verificando se o id está definido \r\n        // Atualizando caso esteja\r\n        if (id !== undefined) {\r\n            console.log(tema)\r\n            put(`/temas`, tema, setTema, {\r\n                headers: {\r\n                    'Authorization' : token\r\n                }\r\n            })\r\n            alert(\"Você atualizou com 100% de sucesso sem erros parabéns !\")\r\n            navigate('/temas')\r\n        }\r\n        // Cadastrando caso não esteaja\r\n        else{\r\n            post(`temas`, tema, setTema, {\r\n                headers : {\r\n                    'Authorization' : token\r\n                }\r\n            })\r\n            alert(\"Você conseguiu cadastrar um tema! Que tal adicionar uma postagem agora?\")\r\n            navigate('/temas')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <Container\r\n            maxWidth=\"sm\"\r\n            className=\"topo\">\r\n            <form onSubmit={onSubmit}>\r\n                <Typography\r\n                    variant=\"h3\"\r\n                    color=\"textSecondary\"\r\n                    component=\"h1\"\r\n                    align=\"center\" >\r\n                    Formulário de cadastro tema\r\n                </Typography>\r\n                <TextField\r\n                    value={tema.descricao}\r\n                    onChange={(e: ChangeEvent<HTMLInputElement>) => updatedTema(e)}\r\n                    id=\"descricao\"\r\n                    label=\"descrição\"\r\n                    variant=\"outlined\"\r\n                    name=\"descricao\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                />\r\n                <Button\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                    color=\"primary\">\r\n                    Finalizar\r\n                </Button>\r\n            </form>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CadastroTema;\r\n\r\nfunction back() {\r\n    throw new Error('Function not implemented.');\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}